import { PrismaClient } from '@prisma/client'
import seed from './seed.json'
import FactoryAbi from './FactoryAbi.json'
import { GasHelper } from './util'
const { Web3, ETH_DATA_FORMAT, DEFAULT_RETURN_FORMAT, Contract } = require('web3')
import type { Web3BaseProvider, AbiStruct } from 'web3-types'
let fs = require('fs')
const path = require('path')

const prisma = new PrismaClient()

const initProvider = (): Web3BaseProvider => {
  try {
      const providerData = fs.readFileSync('eth_providers/providers.json', 'utf8')
      const providerJson = JSON.parse(providerData)

      //Enable one of the next 2 lines depending on Ganache CLI or GUI
      const providerLink = providerJson['provider_link_ui']
      // const providerLink = providerJson['provider_link_cli']

      return new Web3.providers.WebsocketProvider(providerLink)
  } catch (error) {
      throw 'Cannot read provider'
  }
}

let web3Provider: Web3BaseProvider
let web3: typeof Web3

try {
  web3Provider = initProvider()
  web3 = new Web3(web3Provider)
} catch (error) {
  console.error(error)
  throw 'Web3 cannot be initialised.'
}


(async() =>{


const contractInstance = new web3.eth.Contract(FactoryAbi)
const factoryContract = contractInstance.deploy({data: "608060405234801561001057600080fd5b5061106c806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063876a89bc1161005b578063876a89bc146100c6578063b7c3f8b4146100f6578063d4321ec514610112578063f7efada21461011c5761007d565b8063453827c614610082578063525564211461008c57806353b6185e146100aa575b600080fd5b61008a61014c565b005b6100946101df565b6040516100a1919061061f565b60405180910390f35b6100c460048036038101906100bf919061056b565b61024b565b005b6100e060048036038101906100db91906105ba565b610326565b6040516100ed919061063a565b60405180910390f35b610110600480360381019061010b919061056b565b610365565b005b61011a610440565b005b610136600480360381019061013191906105ba565b6104d3565b6040516101439190610655565b60405180910390f35b600060405161015a90610512565b604051809103906000f080158015610176573d6000803e3d6000fd5b5090506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008154811061021b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8273ffffffffffffffffffffffffffffffffffffffff166336b56dfc836040518263ffffffff1660e01b8152600401610284919061061f565b600060405180830381600087803b15801561029e57600080fd5b505af11580156102b2573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16639b85e44d826040518263ffffffff1660e01b81526004016102ef9190610670565b600060405180830381600087803b15801561030957600080fd5b505af115801561031d573d6000803e3d6000fd5b50505050505050565b6000818154811061033657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8273ffffffffffffffffffffffffffffffffffffffff166336b56dfc836040518263ffffffff1660e01b815260040161039e919061061f565b600060405180830381600087803b1580156103b857600080fd5b505af11580156103cc573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16639b85e44d826040518263ffffffff1660e01b81526004016104099190610670565b600060405180830381600087803b15801561042357600080fd5b505af1158015610437573d6000803e3d6000fd5b50505050505050565b600060405161044e9061051f565b604051809103906000f08015801561046a573d6000803e3d6000fd5b5090506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600181815481106104e357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104698061076583390190565b61046980610bce83390190565b60008135905061053b8161071f565b92915050565b60008135905061055081610736565b92915050565b6000813590506105658161074d565b92915050565b60008060006060848603121561058057600080fd5b600061058e8682870161052c565b935050602061059f8682870161052c565b92505060406105b086828701610556565b9150509250925092565b6000602082840312156105cc57600080fd5b60006105da84828501610541565b91505092915050565b6105ec8161068b565b82525050565b6105fb816106d7565b82525050565b61060a816106fb565b82525050565b610619816106c7565b82525050565b600060208201905061063460008301846105e3565b92915050565b600060208201905061064f60008301846105f2565b92915050565b600060208201905061066a6000830184610601565b92915050565b60006020820190506106856000830184610610565b92915050565b60006106968261069d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60006106e2826106e9565b9050919050565b60006106f48261069d565b9050919050565b60006107068261070d565b9050919050565b60006107188261069d565b9050919050565b6107288161068b565b811461073357600080fd5b50565b61073f816106bd565b811461074a57600080fd5b50565b610756816106c7565b811461076157600080fd5b5056fe608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610409806100606000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806336b56dfc1461005157806378eb1c3d1461006d5780638da5cb5b1461008b5780639b85e44d146100a9575b600080fd5b61006b600480360381019061006691906102e7565b6100c5565b005b610075610183565b6040516100829190610348565b60405180910390f35b6100936101f0565b6040516100a09190610348565b60405180910390f35b6100c360048036038101906100be9190610310565b610214565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011d57600080fd5b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060016000815481106101c0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461026c57600080fd5b60028190806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff16021790555050565b6000813590506102cc816103a5565b92915050565b6000813590506102e1816103bc565b92915050565b6000602082840312156102f957600080fd5b6000610307848285016102bd565b91505092915050565b60006020828403121561032257600080fd5b6000610330848285016102d2565b91505092915050565b61034281610363565b82525050565b600060208201905061035d6000830184610339565b92915050565b600061036e82610375565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600063ffffffff82169050919050565b6103ae81610363565b81146103b957600080fd5b50565b6103c581610395565b81146103d057600080fd5b5056fea26469706673582212201b5c518490b91327913e70f8c6ca4cdfa2c5a7c9ccbf880995f5c21cab54ae8064736f6c63430008000033608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610409806100606000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806336b56dfc1461005157806378eb1c3d1461006d5780638da5cb5b1461008b5780639b85e44d146100a9575b600080fd5b61006b600480360381019061006691906102e7565b6100c5565b005b610075610183565b6040516100829190610348565b60405180910390f35b6100936101f0565b6040516100a09190610348565b60405180910390f35b6100c360048036038101906100be9190610310565b610214565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011d57600080fd5b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060016000815481106101c0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461026c57600080fd5b60028190806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff16021790555050565b6000813590506102cc816103a5565b92915050565b6000813590506102e1816103bc565b92915050565b6000602082840312156102f957600080fd5b6000610307848285016102bd565b91505092915050565b60006020828403121561032257600080fd5b6000610330848285016102d2565b91505092915050565b61034281610363565b82525050565b600060208201905061035d6000830184610339565b92915050565b600061036e82610375565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600063ffffffff82169050919050565b6103ae81610363565b81146103b957600080fd5b50565b6103c581610395565b81146103d057600080fd5b5056fea2646970667358221220b27081e042a0c750e023169859cff93aa7c846825c786457cbc5b227036542c064736f6c63430008000033a26469706673582212207e59353f863f0c785ef15cb7ac156630bc650a113cdadba8176d2445c1c38ede64736f6c63430008000033"})

// Get current average gas price
const gasPrice = await web3.eth.getGasPrice(ETH_DATA_FORMAT)
const gasLimit = await factoryContract.estimateGas(
  { from: "0x2dfA509be001a7aA075558131BEA3D8AB83E7B34"},
  DEFAULT_RETURN_FORMAT, // the returned data will be formatted as a bigint   
)
const tx = await factoryContract.send({
  from:"0x2dfA509be001a7aA075558131BEA3D8AB83E7B34",
  gasPrice,
  gas: GasHelper.gasPay(gasLimit)
})
const contractAddress = tx.options.address

console.log("tx\n",contractAddress);

})()



async function main() {
  // const alice = await prisma.node.create({data:{
  //   id: '2',
  //   name:'Hello',
  //   type:'V'
  // }})
 
  // console.log({ alice })
}
main()
  .then(async () => {
    await prisma.$disconnect()
  })
  .catch(async (e) => {
    console.error(e)
    await prisma.$disconnect()
    process.exit(1)
  })



// console.log(seed.nodes);