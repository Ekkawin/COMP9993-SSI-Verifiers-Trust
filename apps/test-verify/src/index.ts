// import express from "express";
// import * as bodyParser from "body-parser";
// import {
//   compileRootHash,
//   compileHashAddresses,
//   generateMerkleProof,
//   makeMerkelRootFromProof,
// } from "../services";
// import { PrismaClient } from "@prisma/client";
// import crypto from "crypto";
// import { ethers } from "hardhat";
import axios from "axios";
// import data from '../data.json'

// const prisma = new PrismaClient();

async function main() {
  // const concurrency = Number(process.argv.slice(2)[0]);
  // console.log("con", concurrency);
  // const a = new Array(concurrency).fill(null).map((_, i) => i + 1);

  const startTime = new Date();
  const t = await axios.post(
    "http://localhost:3000/verify-trustanchor/0xA4899D35897033b927acFCf422bc745916139776"
  );
  console.log("t", Number(t?.data?.substr(t?.data?.length - 3)));
  const requestId = Number(t?.data?.substr(t?.data?.length - 3));
  const u = await axios.post(`http://localhost:3001/verify/${requestId}`, {
    holderWallet: "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266",
    issuerAddress: "0xC9a43158891282A2B1475592D5719c001986Aaec",
    data: {
      type: "Buffer",
      data: [
        67, 130, 206, 248, 150, 76, 197, 18, 196, 168, 59, 102, 169, 98, 135,
        217, 95, 44, 220, 24, 28, 50, 129, 178, 243, 138, 243, 3, 115, 39, 239,
        120, 217, 73, 129, 24, 165, 159, 91, 214, 224, 254, 122, 102, 178, 223,
        54, 173, 125, 41, 111, 94, 110, 203, 120, 55, 253, 247, 42, 145, 218,
        184, 182, 216, 69, 22, 69, 25, 111, 45, 107, 248, 43, 104, 121, 229,
        177, 204, 98, 168, 185, 118, 1, 74, 3, 251, 228, 4, 18, 140, 212, 56,
        206, 66, 139, 58, 209, 24, 52, 118, 83, 138, 111, 236, 136, 158, 161,
        123, 165, 53, 177, 1, 8, 148, 141, 229, 218, 184, 211, 49, 253, 199,
        164, 207, 65, 239, 156, 39, 22, 140, 236, 23, 47, 117, 247, 18, 62, 29,
        103, 19, 136, 0, 242, 197, 44, 104, 98, 50, 169, 195, 204, 127, 251, 93,
        200, 194, 102, 161, 112, 70, 37, 179, 34, 244, 89, 139, 9, 163, 11, 97,
        46, 204, 198, 206, 177, 117, 81, 76, 212, 30, 108, 9, 77, 27, 202, 93,
        63, 115, 150, 237, 203, 87, 151, 157, 144, 180, 46, 218, 253, 144, 25,
        38, 140, 148, 108, 122, 115, 188, 239, 144, 128, 161, 115, 157, 200, 62,
        183, 185, 215, 7, 208, 107, 209, 13, 238, 98, 8, 194, 199, 171, 64, 41,
        30, 34, 172, 92, 16, 44, 124, 115, 24, 124, 222, 183, 188, 34, 86, 88,
        191, 117, 163, 149, 74, 209, 91, 58, 218, 35, 230, 50, 51, 235, 98, 103,
        48, 204, 187, 134, 91, 213, 186, 224, 28, 201, 114, 6, 65, 34, 42, 122,
        8, 217, 249, 105, 175, 187, 205, 53, 230, 6, 61, 192, 225, 35, 206, 45,
        116, 120, 50, 138, 32, 35, 75, 205, 194, 87, 58, 20, 233, 250, 146, 79,
        222, 165, 15, 33, 229, 204, 55, 68, 133, 39, 12, 225, 10, 3, 195, 230,
        110, 77, 8, 25, 83, 210, 246, 180, 222, 123, 189, 87, 221, 201, 187,
        203, 162, 22, 188, 59, 91, 3, 170, 225, 24, 32, 212, 195, 12, 212, 7,
        219, 185, 172, 120, 166, 63, 249, 198, 236, 194, 68, 27, 201, 208, 114,
        103, 243, 7, 40, 152, 185, 132, 149, 14, 53, 144, 128, 103, 224, 113,
        97, 232, 80, 146, 222, 250, 168, 109, 19, 209, 214, 161, 36, 116, 219,
        55, 139, 136, 17, 106, 255, 203, 225, 168, 96, 8, 134, 237, 92, 28, 191,
        179, 59, 166, 207, 103, 132, 110, 28, 207, 20, 62, 214, 16, 119, 2, 145,
        233, 172, 227, 202, 9, 88, 42, 15, 177, 253, 16, 65, 91, 192, 82, 172,
        67, 141, 42, 39, 64, 87, 9, 208, 178, 188, 26, 169, 230, 16, 0, 37, 9,
        1, 19, 140, 38, 149, 237, 155, 198, 207, 137, 21, 3, 111, 145, 19, 56,
        99, 239, 60, 46, 41, 5, 236, 59, 86, 14, 74, 115, 19, 187, 50, 17, 158,
        225, 7, 48, 90, 123, 25, 217, 53, 3, 62,
      ],
    },
  });
  const stop = new Date().getTime() - startTime.getTime();
  console.log("stop", stop);

  // const startTime = new Date();
}

main();
